  version: '3.8'

  services:
    app:
      build:
        context: .
        dockerfile: Dockerfile
      container_name: clean_api
      restart: unless-stopped
      ports:
        - "${PORT:-5489}:${PORT:-5489}"
      volumes:
        - .:/app
        - /app/node_modules
      depends_on:
        - postgres
      environment:
        - NODE_ENV=${NODE_ENV:-development}
        - PORT=${PORT:-5489}
        - DB_HOST=postgres
        - DB_PORT=5432
        - DB_USER=${DB_USER:-postgres}
        - DB_PASSWORD=${DB_PASSWORD:-postgres}
        - DB_NAME=${DB_NAME:-clean_architecture_db}
        - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key}
      networks:
        - app-network

    postgres:
      image: postgres:14-alpine
      container_name: clean_postgres
      restart: unless-stopped
      ports:
        - "5432:5432"
      environment:
        - POSTGRES_USER=${DB_USER:-postgres}
        - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
        - POSTGRES_DB=${DB_NAME:-clean_architecture_db}
      volumes:
        - postgres_data:/var/lib/postgresql/data
        - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      networks:
        - app-network

    pgadmin:
      image: dpage/pgadmin4:latest
      container_name: clean_pgadmin
      restart: unless-stopped
      ports:
        - "5050:80"
      environment:
        - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@admin.com}
        - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
      depends_on:
        - postgres
      networks:
        - app-network

  volumes:
    postgres_data:

  networks:
    app-network:
      driver: bridge
